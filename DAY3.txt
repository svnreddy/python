Microsoft Windows [Version 6.3.9600]
(c) 2013 Microsoft Corporation. All rights reserved.

D:\PPT>cd python\hands

D:\PPT\python\hands>python
Python 3.5.2 (v3.5.2:4def2a2901a5, Jun 25 2016, 22:18:55) [MSC v.1900 64 bit (AM
D64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import sys
>>> dir(sys)
['__displayhook__', '__doc__', '__egginsert', '__excepthook__', '__interactiveho
ok__', '__loader__', '__name__', '__package__', '__plen', '__spec__', '__stderr_
_', '__stdin__', '__stdout__', '_clear_type_cache', '_current_frames', '_debugma
llocstats', '_getframe', '_home', '_mercurial', '_xoptions', 'api_version', 'arg
v', 'base_exec_prefix', 'base_prefix', 'builtin_module_names', 'byteorder', 'cal
l_tracing', 'callstats', 'copyright', 'displayhook', 'dllhandle', 'dont_write_by
tecode', 'exc_info', 'excepthook', 'exec_prefix', 'executable', 'exit', 'flags',
 'float_info', 'float_repr_style', 'get_coroutine_wrapper', 'getallocatedblocks'
, 'getcheckinterval', 'getdefaultencoding', 'getfilesystemencoding', 'getprofile
', 'getrecursionlimit', 'getrefcount', 'getsizeof', 'getswitchinterval', 'gettra
ce', 'getwindowsversion', 'hash_info', 'hexversion', 'implementation', 'int_info
', 'intern', 'is_finalizing', 'maxsize', 'maxunicode', 'meta_path', 'modules', '
path', 'path_hooks', 'path_importer_cache', 'platform', 'prefix', 'ps1', 'ps2',
'set_coroutine_wrapper', 'setcheckinterval', 'setprofile', 'setrecursionlimit',
'setswitchinterval', 'settrace', 'stderr', 'stdin', 'stdout', 'thread_info', 've
rsion', 'version_info', 'warnoptions', 'winver']
>>> sys.version_info
sys.version_info(major=3, minor=5, micro=2, releaselevel='final', serial=0)
>>> sys.stdin
<_io.TextIOWrapper name='<stdin>' mode='r' encoding='cp437'>
>>> sys.stdout
<_io.TextIOWrapper name='<stdout>' mode='w' encoding='cp437'>
>>> sys.stderr
<_io.TextIOWrapper name='<stderr>' mode='w' encoding='cp437'>
>>> print("OK")
OK
>>> sys.stdout.write("OK\n")
OK
3
>>> r = input("->")
->20
>>> r
'20'
>>> r = sys.stdin.readline()
20
>>> r
'20\n'
>>> import os
>>> dir(os)
['F_OK', 'MutableMapping', 'O_APPEND', 'O_BINARY', 'O_CREAT', 'O_EXCL', 'O_NOINH
ERIT', 'O_RANDOM', 'O_RDONLY', 'O_RDWR', 'O_SEQUENTIAL', 'O_SHORT_LIVED', 'O_TEM
PORARY', 'O_TEXT', 'O_TRUNC', 'O_WRONLY', 'P_DETACH', 'P_NOWAIT', 'P_NOWAITO', '
P_OVERLAY', 'P_WAIT', 'R_OK', 'SEEK_CUR', 'SEEK_END', 'SEEK_SET', 'TMP_MAX', 'W_
OK', 'X_OK', '_DummyDirEntry', '_Environ', '__all__', '__builtins__', '__cached_
_', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__',
'_dummy_scandir', '_execvpe', '_exists', '_exit', '_get_exports_list', '_putenv'
, '_unsetenv', '_wrap_close', 'abort', 'access', 'altsep', 'chdir', 'chmod', 'cl
ose', 'closerange', 'cpu_count', 'curdir', 'defpath', 'device_encoding', 'devnul
l', 'dup', 'dup2', 'environ', 'errno', 'error', 'execl', 'execle', 'execlp', 'ex
eclpe', 'execv', 'execve', 'execvp', 'execvpe', 'extsep', 'fdopen', 'fsdecode',
'fsencode', 'fstat', 'fsync', 'ftruncate', 'get_exec_path', 'get_handle_inherita
ble', 'get_inheritable', 'get_terminal_size', 'getcwd', 'getcwdb', 'getenv', 'ge
tlogin', 'getpid', 'getppid', 'isatty', 'kill', 'linesep', 'link', 'listdir', 'l
seek', 'lstat', 'makedirs', 'mkdir', 'name', 'open', 'pardir', 'path', 'pathsep'
, 'pipe', 'popen', 'putenv', 'read', 'readlink', 'remove', 'removedirs', 'rename
', 'renames', 'replace', 'rmdir', 'scandir', 'sep', 'set_handle_inheritable', 's
et_inheritable', 'spawnl', 'spawnle', 'spawnv', 'spawnve', 'st', 'startfile', 's
tat', 'stat_float_times', 'stat_result', 'statvfs_result', 'strerror', 'supports
_bytes_environ', 'supports_dir_fd', 'supports_effective_ids', 'supports_fd', 'su
pports_follow_symlinks', 'symlink', 'sys', 'system', 'terminal_size', 'times', '
times_result', 'truncate', 'umask', 'uname_result', 'unlink', 'urandom', 'utime'
, 'waitpid', 'walk', 'write']
>>> with os.popen("dir") as f:
...     lines = f.readlines()
...
>>> lines[:5]
[' Volume in drive D is Data\n', ' Volume Serial Number is 1A08-0D68\n', '\n', '
 Directory of D:\\PPT\\python\\hands\n', '\n']
>>> import time
>>> import math
>>> import datetime
>>> dir(time)
['_STRUCT_TM_ITEMS', '__doc__', '__loader__', '__name__', '__package__', '__spec
__', 'altzone', 'asctime', 'clock', 'ctime', 'daylight', 'get_clock_info', 'gmti
me', 'localtime', 'mktime', 'monotonic', 'perf_counter', 'process_time', 'sleep'
, 'strftime', 'strptime', 'struct_time', 'time', 'timezone', 'tzname']
>>> time.sleep(1)
>>> math.sqrt(1.2)
1.0954451150103321
>>> import sys
>>> import os
>>> import time
>>> import math
>>> import datetime
>>> import xml.etree.ElementTree as ET
>>> tr = ET.parse(r"data\example.xml")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "C:\Python35\lib\xml\etree\ElementTree.py", line 1184, in parse
    tree.parse(source, parser)
  File "C:\Python35\lib\xml\etree\ElementTree.py", line 585, in parse
    source = open(source, "rb")
FileNotFoundError: [Errno 2] No such file or directory: 'data\\example.xml'
>>> import xml.etree.ElementTree as ET
>>> tr = ET.parse(r"data\example.xml")
>>> r = tr.getroot()
>>> r.tag
'data'
>>> r.attrib
{}
>>> t.text
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 't' is not defined
>>> r.text
'\n    '
>>> tr
<xml.etree.ElementTree.ElementTree object at 0x0000002287F01320>
>>> dir(tr)
['__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__form
at__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__le__',
 '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__
repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref_
_', '_root', '_setroot', 'find', 'findall', 'findtext', 'getiterator', 'getroot'
, 'iter', 'iterfind', 'parse', 'write', 'write_c14n']
>>> nn = r.findall("./country/rank")
>>> nn
[<Element 'rank' at 0x000000228814F1D8>, <Element 'rank' at 0x000000228814F3B8>,
 <Element 'rank' at 0x000000228814F548>]
>>> nn[0]
<Element 'rank' at 0x000000228814F1D8>
>>> nn[0].text
'1'
>>> out =[]
>>> for n in nn:
...     out.append(n.text)
...
>>> out
['1', '4', '68']
>>> out = [ n.text for n in nn]
>>> out
['1', '4', '68']
>>> nn = r.findall("./country/rank")
>>> nn
[<Element 'rank' at 0x000000228814F1D8>, <Element 'rank' at 0x000000228814F3B8>,
 <Element 'rank' at 0x000000228814F548>]
>>> type(nn)
<class 'list'>
>>> type(nn[0])
<class 'xml.etree.ElementTree.Element'>
>>> dir(nn[0])
['__class__', '__copy__', '__deepcopy__', '__delattr__', '__delitem__', '__dir__
', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__
', '__getstate__', '__gt__', '__hash__', '__init__', '__le__', '__len__', '__lt_
_', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__
', '__setitem__', '__setstate__', '__sizeof__', '__str__', '__subclasshook__', '
append', 'clear', 'extend', 'find', 'findall', 'findtext', 'get', 'getchildren',
 'getiterator', 'insert', 'items', 'iter', 'iterfind', 'itertext', 'keys', 'make
element', 'remove', 'set']
>>> nn[0].tag
'rank'
>>> nn[0].attrib
{}
>>> nn[0].text
'1'
>>> out = []
>>> for n in nn:
...     out.append(n.text)
...
>>> out
['1', '4', '68']
>>> nn = r.findall("./country")
>>> out = []
>>> for n in nn:
...     out.append(n.attrib["name"])
...
>>> out
['Liechtenstein', 'Singapore', 'Panama']
>>> nn = r.findall("./country/neighbor")
>>> out = []
>>> for n in nn:
...     if n.attrib['direction'] == 'E':
...             out.append(n.attrib['name'])
...
>>> out
['Austria', 'Colombia']
>>> nn = r.findall("./country")
>>> do = {}
>>> for n in nn:
...     n1 = n.findall("./neighbor")
...     out = []
  File "<stdin>", line 3
    out = []
           ^
IndentationError: unindent does not match any outer indentation level
>>> nn = r.findall("./country")
>>> do = {}
>>> for n in nn:
...     n1 = n.findall("./neighbor")
...     out = []
...     for e in n1:
...             out.append(e.attrib['name'])
...     do[n.attrib['name']] = out
...
>>> do
{'Panama': ['Costa Rica', 'Colombia'], 'Singapore': ['Malaysia'], 'Liechtenstein
': ['Austria', 'Switzerland']}
>>> import csv
>>> with open(r"data/iris.csv", "rt") as f :
...     rd = csv.reader(f)
...     rows = list(rd)
...
>>> rows[0:5]
[['SepalLength', 'SepalWidth', 'PetalLength', 'PetalWidth', 'Name'], ['5.1', '3.
5', '1.4', '0.2', 'Iris-setosa'], ['4.9', '3.0', '1.4', '0.2', 'Iris-setosa'], [
'4.7', '3.2', '1.3', '0.2', 'Iris-setosa'], ['4.6', '3.1', '1.5', '0.2', 'Iris-s
etosa']]
>>> type(rd)
<class '_csv.reader'>
>>> dir(rd)
['__class__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge
__', '__getattribute__', '__gt__', '__hash__', '__init__', '__iter__', '__le__',
 '__lt__', '__ne__', '__new__', '__next__', '__reduce__', '__reduce_ex__', '__re
pr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'dialect', 'l
ine_num']
>>> headers = rows[0]
>>> rows = rows[1:]
>>> rows[0:5]
[['5.1', '3.5', '1.4', '0.2', 'Iris-setosa'], ['4.9', '3.0', '1.4', '0.2', 'Iris
-setosa'], ['4.7', '3.2', '1.3', '0.2', 'Iris-setosa'], ['4.6', '3.1', '1.5', '0
.2', 'Iris-setosa'], ['5.0', '3.6', '1.4', '0.2', 'Iris-setosa']]
>>> len(rows)
150
>>> len(rows[0])
5
>>> e = rows[0]
>>> e
['5.1', '3.5', '1.4', '0.2', 'Iris-setosa']
>>> e[-1]
'Iris-setosa'
>>> res = []
>>> for e in rows:
...     res.append(e[-1])
...
>>> set(res)
{'Iris-setosa', 'Iris-virginica', 'Iris-versicolor'}
>>> name = set(res)
>>>
>>>
>>> rowsd = []
>>> for r in rows:
...     rowsd.append( float(r[0]), float(r[1]), float(r[2]), float(r[3]),r[-1])
...
Traceback (most recent call last):
  File "<stdin>", line 2, in <module>
TypeError: append() takes exactly one argument (5 given)
>>> rowsd = []
>>> for r in rows:
...     rowsd.append( [float(r[0]), float(r[1]), float(r[2]), float(r[3]),r[-1]]
)
...
>>> rowsd[0:5]
[[5.1, 3.5, 1.4, 0.2, 'Iris-setosa'], [4.9, 3.0, 1.4, 0.2, 'Iris-setosa'], [4.7,
 3.2, 1.3, 0.2, 'Iris-setosa'], [4.6, 3.1, 1.5, 0.2, 'Iris-setosa'], [5.0, 3.6,
1.4, 0.2, 'Iris-setosa']]
>>> out = []
>>> for e in rowsd:
...     out.append(e[0])
...
>>> max(out)
7.9
>>> out = []
>>> out = {]
  File "<stdin>", line 1
    out = {]
           ^
SyntaxError: invalid syntax
>>> out = {}
>>> names
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'names' is not defined
>>> name = set(res)
>>> name
{'Iris-setosa', 'Iris-virginica', 'Iris-versicolor'}
>>> do = {} #k,v
>>> for n in name:
...     out = []
...     for e in rowsd:
...         if e[-1] == n :
...             out.append(e[0])
...     do[n] = max(out)
...
>>> do
{'Iris-setosa': 5.8, 'Iris-virginica': 7.9, 'Iris-versicolor': 7.0}
>>> out = []
>>> for e in rowsd:
...     out.append(e[0])
...
>>> max(out)
7.9
>>> from sqlite3 import connect
>>> con = connect(r"iris.db")
>>> cur = con.cursor()
>>> cur.execute("""create table if not exist iris(sl double, sw double,
...         pl double, pw double, name varchar(20))""")
Traceback (most recent call last):
  File "<stdin>", line 2, in <module>
sqlite3.OperationalError: near "exist": syntax error
>>> cur.execute("""create table if not exists iris(sl double, sw double,
...         pl double, pw double, name varchar(20))""")
<sqlite3.Cursor object at 0x0000002288124490>
>>> for r in rowsd:
...     o = cur.execute("insert into iris values(?,?,?,?,?)", r)
...
>>> con.commit()
>>> r = cur.execute("select name, max(sl) from iris group by name")
>>> res = list(r.fetchall())
>>> res
[('Iris-setosa', 5.8), ('Iris-versicolor', 7.0), ('Iris-virginica', 7.9)]
>>> import json
>>> with open(r"data\example.json","rt") as f:
...     obj = josn.load(f)
...
Traceback (most recent call last):
  File "<stdin>", line 2, in <module>
NameError: name 'josn' is not defined
>>> with open(r"data\example.json","rt") as f:
...     obj = json.load(f)
...
>>> obj
[{'details': {'firstName': 'John', 'spouse': None, 'age': 25, 'children': [], 'p
honeNumbers': [{'type': 'home', 'number': '212 555-1234'}, {'type': 'office', 'n
umber': '646 555-4567'}, {'type': 'mobile', 'number': '123 456-7890'}], 'isAlive
': True, 'salary': 123.5, 'address': {'postalCode': '10021-3100', 'city': 'New Y
ork', 'streetAddress': '21 2nd Street', 'state': 'NY'}, 'lastName': 'Smith'}, 'e
mpId': 1}, {'details': {'firstName': 'Johns', 'spouse': None, 'age': 25, 'childr
en': [], 'phoneNumbers': [{'type': 'home', 'number': '212 555-1234'}, {'type': '
office', 'number': '646 555-4567'}, {'type': 'mobile', 'number': '123 456-7890'}
], 'isAlive': True, 'salary': 123.5, 'address': {'postalCode': '10021-3100', 'ci
ty': 'New York', 'streetAddress': '21 2nd Street', 'state': 'CL'}, 'lastName': '
Smith'}, 'empId': 20}]
>>> import pprint
>>> pprint.pprint(obj)
[{'details': {'address': {'city': 'New York',
                          'postalCode': '10021-3100',
                          'state': 'NY',
                          'streetAddress': '21 2nd Street'},
              'age': 25,
              'children': [],
              'firstName': 'John',
              'isAlive': True,
              'lastName': 'Smith',
              'phoneNumbers': [{'number': '212 555-1234', 'type': 'home'},
                               {'number': '646 555-4567', 'type': 'office'},
                               {'number': '123 456-7890', 'type': 'mobile'}],
              'salary': 123.5,
              'spouse': None},
  'empId': 1},
 {'details': {'address': {'city': 'New York',
                          'postalCode': '10021-3100',
                          'state': 'CL',
                          'streetAddress': '21 2nd Street'},
              'age': 25,
              'children': [],
              'firstName': 'Johns',
              'isAlive': True,
              'lastName': 'Smith',
              'phoneNumbers': [{'number': '212 555-1234', 'type': 'home'},
                               {'number': '646 555-4567', 'type': 'office'},
                               {'number': '123 456-7890', 'type': 'mobile'}],
              'salary': 123.5,
              'spouse': None},
  'empId': 20}]
>>> out = []
>>> for e in obj:
...     out.append(e['empId'])
...
>>> out
[1, 20]
>>> out = []
>>> for e in obj:
...     out.append(e['details']['firstName'] + e['details']['lastName'])
...
>>> out
['JohnSmith', 'JohnsSmith']
>>> out = []
>>>
>>> for e in obj:
...     for ph in e['details']['phoneNumbers']:
...             if r['type'] == 'office':
...                     out.append(e['number'])
...
Traceback (most recent call last):
  File "<stdin>", line 3, in <module>
TypeError: 'sqlite3.Cursor' object is not subscriptable
>>> for e in obj:
...     for ph in e['details']['phoneNumbers']:
...             if ph['type'] == 'office':
...                     out.append(ph['number'])
...
>>> out
['646 555-4567', '646 555-4567']
>>> do={}
>>> for e in obj:
...     for ph in e['details']['phoneNumbers']:
...             if ph['type'] == 'office':
...                     do[e['empId'] = ph['number']
  File "<stdin>", line 4
    do[e['empId'] = ph['number']
                  ^
SyntaxError: invalid syntax
>>>
>>> for e in obj:
...     for ph in e['details']['phoneNumbers']:
...             if ph['type'] == 'office':
...                     do[e['empId']] = ph['number']
...
>>> do
{1: '646 555-4567', 20: '646 555-4567'}
>>> do
{1: '646 555-4567', 20: '646 555-4567'}
>>> import pkg.mex
>>> pkg.mex.square(20)
400
>>> help(pkg.mex.square)
Help on function square in module pkg.mex:

square(x)
    Square function
    takes number

>>>
>>>
>>>
>>>
>>>
>>> import sys
>>> sys.path
['', 'C:\\Python35\\lib\\site-packages\\xgboost-0.7-py3.5.egg', 'C:\\Python35\\p
ython35.zip', 'C:\\Python35\\DLLs', 'C:\\Python35\\lib', 'C:\\Python35', 'C:\\Py
thon35\\lib\\site-packages', 'C:\\Python35\\lib\\site-packages\\win32', 'C:\\Pyt
hon35\\lib\\site-packages\\win32\\lib', 'C:\\Python35\\lib\\site-packages\\Pytho
nwin']
>>> def add(x,y):
...     return x+y
...
>>> add(2,3)
5
>>> add(y=3,x=2)
5
>>> add(3, y=5)
8
>>> def add1(x,y):
...     return x+y
...
>>> def add1(x,y=20):
...     return x+y
...
>>> add1(2)
22
>>> add1(2,4)
6
>>>
>>> a = 2
>>> b = 1
>>> a,b = b,a
>>> a
1
>>> b
2
>>> a, *b,c = 1,2,3,4
>>> a,b,c
(1, [2, 3], 4)
>>> a,*b,c = 1,2
>>> a,b,c
(1, [], 2)
>>>
>>>
>>> def f(*args):
...     print(args)
...
>>> f()
()
>>> f(1)
(1,)
>>> f(1,2)
(1, 2)
>>> f(3,4)
(3, 4)
>>> f(3,4,5)
(3, 4, 5)
>>> l=[1,2,3,4]
>>> f(l[0],l[1],l[2],l[3])
(1, 2, 3, 4)
>>> f(*l)
(1, 2, 3, 4)
>>> type( () )
<class 'tuple'>
>>> type( (1) )
<class 'int'>
>>> type( (1,) )
<class 'tuple'>
>>> sum([1,2,3,4])
10
>>> max([1,2,3,4])
4
>>> min([1,2,3,4])
1
>>> def f(x):
...     return x*x
...
>>> f(2)
4
>>> type(f)
<class 'function'>
>>> f1 = lambda x : x*x
>>> f1(2)
4
>>> type(f1)
<class 'function'>
>>> quit()

D:\PPT\python\hands>python
Python 3.5.2 (v3.5.2:4def2a2901a5, Jun 25 2016, 22:18:55) [MSC v.1900 64 bit (AM
D64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> def p(x):
...     print(x+y)
...
>>> p(2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 2, in p
NameError: name 'y' is not defined
>>> y = 100
>>> p(2)
102
>>> def f(x):
...     def g(y):
...             return x+y
...     g(10+x)
...
>>> f(20)
>>> def f(x):
...     def g(y):
...             return x+y
...     return g(10+x)
...
>>> f(20)
50
>>>




































































































































